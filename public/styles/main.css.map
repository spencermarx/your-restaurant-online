{"version":3,"sources":["0-plugins/hamburgers/_base.scss","0-plugins/hamburgers/_hamburgers.scss","1-helpers/_variables.scss","0-plugins/hamburgers/types/_squeeze.scss","2-base/_global.scss","2-base/_typography.scss","3-layout/_header.scss","1-helpers/_functions.scss","3-layout/_siteMainContent.scss","1-helpers/_mixins.scss"],"names":[],"mappings":"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","file":"main.css","sourcesContent":["// Hamburger\n// ==================================================\n.hamburger {\n  padding: $hamburger-padding-y $hamburger-padding-x;\n  display: inline-block;\n  cursor: pointer;\n\n  transition-property: opacity, filter;\n  transition-duration: 0.15s;\n  transition-timing-function: linear;\n\n  // Normalize (<button>)\n  font: inherit;\n  color: inherit;\n  text-transform: none;\n  background-color: transparent;\n  border: 0;\n  margin: 0;\n  overflow: visible;\n\n  &:hover {\n    @if $hamburger-hover-use-filter == true {\n      filter: $hamburger-hover-filter;\n    } @else {\n      opacity: $hamburger-hover-opacity;\n    }\n  }\n\n  &.is-active {\n    &:hover {\n      @if $hamburger-hover-use-filter == true {\n        filter: $hamburger-active-hover-filter;\n      } @else {\n        opacity: $hamburger-active-hover-opacity;\n      }\n    }\n\n    .hamburger-inner,\n    .hamburger-inner::before,\n    .hamburger-inner::after {\n      background-color: $hamburger-active-layer-color;\n    }\n  }\n}\n\n.hamburger-box {\n  width: $hamburger-layer-width;\n  height: $hamburger-layer-height * 3 + $hamburger-layer-spacing * 2;\n  display: inline-block;\n  position: relative;\n}\n\n.hamburger-inner {\n  display: block;\n  top: 50%;\n  margin-top: $hamburger-layer-height / -2;\n\n  &,\n  &::before,\n  &::after {\n    width: $hamburger-layer-width;\n    height: $hamburger-layer-height;\n    background-color: $hamburger-layer-color;\n    border-radius: $hamburger-layer-border-radius;\n    position: absolute;\n    transition-property: transform;\n    transition-duration: 0.15s;\n    transition-timing-function: ease;\n  }\n\n  &::before,\n  &::after {\n    content: \"\";\n    display: block;\n  }\n\n  &::before {\n    top: ($hamburger-layer-spacing + $hamburger-layer-height) * -1;\n  }\n\n  &::after {\n    bottom: ($hamburger-layer-spacing + $hamburger-layer-height) * -1;\n  }\n}\n\n.sm--navbar__scrolled .hamburger-inner {\n  display: block;\n  top: 50%;\n  margin-top: $hamburger-layer-height / -2;\n\n  &,\n  &::before,\n  &::after {\n    background-color: $hamburger-layer-scroll-color;\n  }\n}\n","@charset \"UTF-8\";\n\n// ======================\n// Hamburgers\n// ======================\n\n// Default Settings\n$hamburger-padding-x           : 15px !default;\n$hamburger-padding-y           : 15px !default;\n$hamburger-layer-width         : 40px !default;\n$hamburger-layer-height        : 4px !default;\n$hamburger-layer-spacing       : 6px !default;\n$hamburger-layer-color         : #FFF !default;\n$hamburger-layer-scroll-color  : $primary !default;\n$hamburger-layer-border-radius : 4px !default;\n$hamburger-hover-opacity       : 0.7 !default;\n$hamburger-active-layer-color  : $hamburger-hover-opacity !default;\n$hamburger-active-hover-opacity: $hamburger-hover-opacity !default;\n$hamburger-hover-use-filter   : false !default;\n$hamburger-hover-filter       : opacity(50%) !default;\n$hamburger-active-hover-filter: $hamburger-hover-filter !default;\n\n// Types of hamburgers\n$hamburger-types: (\n   squeeze,\n) !default;\n\n// Base Hamburger\n@import \"base\";\n\n// Hamburger type\n@import \"types/squeeze\";","// ======================\n// Color Variables\n// ======================\n\n$primary: #006DB7;\n$primary-hover: #197fc4;\n$secondary: #37B5FF;\n$secondary-hover: #64c6ff;\n$light: #F8F8F8;\n$gray: #6E6E6E;\n$dark: #1D2731;\n\n// ======================\n// Shadows\n// ======================\n$shadow: 0px 2px 8px rgba(0, 0, 0, 0.25);\n\n// ======================\n// Breakpoints\n// ======================\n$grid-breakpoints: (\n  xs: 0,\n  sm: 576px,\n  md: 768px,\n  lg: 992px,\n  xl: 1200px\n) !default;\n\n$breakpoint-xs: 0;\n$breakpoint-sm: 576px;\n$breakpoint-md: 768px;\n$breakpoint-lg: 992px;\n$breakpoint-xl: 1200px;\n\n// ======================\n// Fonts\n// ======================\n\n// Families\n$font-roboto: 'Roboto', sans-serif;\n\n// Weights\n$font-light: lighter;\n$font-regular: normal;\n$font-bold: bold;\n\n// ======================\n// Animations\n// ======================\n\n// Transitions\n$transition-smooth-normal: 350ms ease-in;\n$transition-smooth-fast: 150ms ease-in;\n\n// Transformations\n$transform-scale: scale(1.025);","@if index($hamburger-types, squeeze) {\n  /*\n   * Squeeze\n   */\n  .hamburger--squeeze {\n    .hamburger-inner {\n      transition-duration: 0.075s;\n      transition-timing-function: cubic-bezier(0.55, 0.055, 0.675, 0.19);\n\n      &::before {\n        transition: top 0.075s 0.12s ease,\n                    opacity 0.075s ease;\n      }\n\n      &::after {\n        transition: bottom 0.075s 0.12s ease,\n                    transform 0.075s cubic-bezier(0.55, 0.055, 0.675, 0.19);\n      }\n    }\n\n    &.is-active {\n      .hamburger-inner {\n        transform: rotate(45deg);\n        transition-delay: 0.12s;\n        transition-timing-function: cubic-bezier(0.215, 0.61, 0.355, 1);\n\n        &::before {\n          top: 0;\n          opacity: 0;\n          transition: top 0.075s ease,\n                      opacity 0.075s 0.12s ease;\n        }\n\n        &::after {\n          bottom: 0;\n          transform: rotate(-90deg);\n          transition: bottom 0.075s ease,\n                      transform 0.075s 0.12s cubic-bezier(0.215, 0.61, 0.355, 1);\n        }\n      }\n    }\n  }\n}\n","// ======================\n// Global\n// ======================\n\n// -------- HTML --------\nbody {\n  // Set Typography\n  font-family: $font-roboto;\n\n  // TODO: Set body background to $light color\n}\n\nmain {\n    position: relative;\n}","@font-face {\n  font-family: Roboto;\n  src: local(\"Roboto\"), url('./fonts/Roboto-Regular.ttf') format(\"truetype\");\n  font-weight: normal;\n}\n\n// FIXME: Light is not found - find and reference path properly\n@font-face {\n  font-family: Roboto;\n  src: url('./fonts/Roboto-Light.ttf') format(\"truetype\");\n  font-weight: lighter;\n}\n@font-face {\n  font-family: Roboto;\n  src: url('./fonts/Roboto-LightItalic.ttf') format(\"truetype\");\n  font-weight: lighter;\n  font-style: italic;\n}\n@font-face {\n  font-family: Roboto;\n  src: url('./fonts/Roboto-Bold.ttf') format(\"truetype\");\n  font-weight: bold;\n}\n","// ======================\r\n// Header\r\n// ======================\r\n\r\n/*\r\nTODO: Create animation frames for navbar on scroll\r\n-> Slide up first (with margin top)\r\n-> THEN fade to white background\r\n*/\r\n\r\n// -------- Navbar --------\r\n.navbar {\r\n  margin-top: 2rem; // Set top margin\r\n  width: 100%; // Fit width to  full screen width\r\n  position: fixed; // Fix  to top of page\r\n  transition: margin $transition-smooth-normal; // Smooth transition with margin\r\n  z-index: assign-Z-Index(highest);\r\n\r\n  // Clear at the top of the page\r\n  &.sm--navbar__clear {\r\n    background-color: transparent;\r\n\r\n    //  Links  set to white\r\n    a {\r\n      color: white;\r\n    }\r\n  }\r\n\r\n  // Scrolled\r\n  &.sm--navbar__scrolled {\r\n    margin-top: 0;\r\n    background-color: white;\r\n    box-shadow: rgba(0, 0, 0, 0.1) 0px 0px 10px; // Shadow\r\n    transition: $transition-smooth-normal; // Smooth transition\r\n\r\n    a {\r\n      transition: $transition-smooth-normal; // Give transition\r\n      color: $primary; // Links set to primary\r\n    }\r\n    // Shrink logo and change color\r\n    .navbar-brand {\r\n      transition: $transition-smooth-normal;\r\n      transform: scaleX(0.6) scaleY(0.6);\r\n      .sm--navbar__logo-segment {\r\n        fill: $primary; //\\ Change SVG Segment Fill\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n@media (min-width: $breakpoint-xl) {\r\n  //  Adjust Navbar width on xl screen\r\n  .navbar .container {\r\n    max-width: 80%;\r\n  }\r\n}\r\n\r\n// -------- Brand Logo --------\r\n.navbar-brand {\r\n  transition: $transition-smooth-normal;\r\n  transform: scaleX(1) scaleY(1);\r\n\r\n  .sm--navbar__logo {\r\n    width: 80px;\r\n    height: 80px;\r\n  }\r\n}\r\n\r\n// -------- Navigation Links --------\r\n//  All  Links\r\n.nav-item {\r\n  text-transform: uppercase;\r\n  margin: auto;\r\n  text-align: center;\r\n\r\n  &:last-of-type {\r\n    margin-bottom: 0.5rem;\r\n  }\r\n}\r\n\r\n// Set link alignment on Lg+\r\n@media (min-width: $breakpoint-lg) {\r\n  //  All  Links\r\n  .nav-item {\r\n    margin-right: 1rem;\r\n    text-align: right;\r\n\r\n    //  Set last nav link flush with the right side of the container\r\n    &:last-of-type {\r\n      margin-right: 0;\r\n      margin-bottom: 0;\r\n    }\r\n  }\r\n}\r\n\r\n// -------- Toggle Button --------\r\n.hamburger {\r\n  //  Override Bootstrap Outline\r\n  &:focus {\r\n    outline: none;\r\n    outline-color: none;\r\n    outline-style: none;\r\n    outline-width: none;\r\n    outline: none;\r\n  }\r\n}\r\n\r\n// Don't show Toggle Button on screens Lg+\r\n@media (min-width: $breakpoint-lg) {\r\n  .hamburger {\r\n    display: none;\r\n  }\r\n}\r\n","// ======================\n// Layer Stacking\n// ======================\n\n@function assign-Z-Index($level) {\n  @if $level == base {\n    @return (random(100) - 1000);\n  } @else if $level == mid {\n    @return (random(100) - 500);\n  } @else if $level == upper {\n    @return (random(100) - 300);\n  } @else if $level == highest {\n    @return (random(100) + 100);\n  } @else {\n    @return random(100);\n  }\n}\n","// ======================\n// SITE MAIN CONTENT\n// ======================\n\n\n// ----------------------\n// Hero\n// ----------------------\n\n// -------- Section Div --------\n\n// Padding on screens Lg+\n.sm--hero {\n  padding-top: 15rem; // Move section content down\n  padding-bottom: 10rem; // Move section content down\n  transition: $transition-smooth-normal;\n  position: relative;\n}\n\n@media (min-width: $breakpoint-lg) {\n  .sm--hero {\n    padding-top: 25rem; // Move section content down\n    padding-bottom: 25rem; // Move section content down\n  }\n}\n\n// -------- Background SVG --------\n\n.sm--hero__background-svg {\n  position: absolute;\n  width: 2000px;\n  height: 1393px;\n  top: -300px;\n  left: -250px;\n  z-index: assign-Z-Index(base); // Lowest\n  transition: $transition-smooth-normal; //Add smooth transition\n}\n\n// Position Lg+\n@media (min-width: $breakpoint-lg) {\n  .sm--hero__background-svg {\n    left: 50px;\n  }\n}\n\n// -------- Hero Text Content--------\n.sm--hero__text-content {\n  text-align: center;\n  transition: $transition-smooth-normal;\n\n  // Header\n  .sm--hero__header {\n    font-weight: $font-bold;\n    font-size: 3.5rem;\n    line-height: 3.5rem;\n    text-transform: uppercase;\n    color: white;\n  }\n  // Subheader\n  .sm--hero__subheader {\n    padding: 1rem 0;\n    font-weight: $font-light;\n    font-size: 1.25rem;\n    line-height: 1.25rem;\n    text-transform: none;\n    color: white;\n  }\n\n  // Button - \"Get Started Free →\"\n  .sm--hero__button {\n    background: $secondary;\n    box-shadow: $shadow;\n    transition: $transition-smooth-normal;\n    margin-top: 0.5rem;\n    margin-bottom: 0.5rem;\n\n    // Hover Effects\n    &:hover {\n      background: $secondary-hover;\n      transform: $transform-scale;\n    }\n  }\n}\n\n// Hero Header Text on screens Lg+\n@media (min-width: $breakpoint-lg) {\n  .sm--hero__text-content {\n    margin-left: 10rem;\n    text-align: left;\n    // Header\n    .sm--hero__header {\n      font-weight: $font-bold;\n      font-size: 3.5rem;\n      line-height: 3.5rem;\n      text-transform: uppercase;\n      color: white;\n    }\n    // Subheader\n    .sm--hero__subheader {\n      padding: 1rem 0;\n      font-weight: $font-light;\n      font-size: 1.25rem;\n      line-height: 1.25rem;\n      text-transform: none;\n      color: white;\n    }\n\n    // Button - \"Get Started Free →\"\n    .sm--hero__button {\n      background: $secondary;\n      box-shadow: $shadow;\n      transition: $transition-smooth-normal;\n      margin-top: 0.5rem;\n      margin-bottom: 0.5rem;\n\n      // Hover Effects\n      &:hover {\n        background: $secondary-hover;\n        transform: $transform-scale;\n      }\n    }\n  }\n}\n\n// -------- Hero Image - Computer --------\n\n.sm--hero__image-computer {\n  // position: relative;\n  transition: $transition-smooth-normal;\n  width: 450px;\n  height: auto;\n}\n\n@media (min-width: $breakpoint-lg) {\n  .sm--hero__image-computer {\n    position: absolute;\n    top: -250px;\n    z-index: -497;\n    width: 1250px;\n  }\n}\n\n\n// ----------------------\n// Features\n// ----------------------\n\n// -------- Section Div --------\n.sm--features{\n  padding-top: 1rem; // Move section content down\n  padding-bottom: 1rem; // Move section content down\n  transition: $transition-smooth-normal;\n  position: relative;\n}\n\n// -------- Feature Card Columns --------\n.card-columns {\n  @include media-breakpoint-down(sm) {\n    column-count: 1;\n  }\n  @include media-breakpoint-only(md) {\n    column-count: 2;\n  }\n  @include media-breakpoint-up(lg) {\n    column-count: 4;\n  }\n}\n\n// -------- Feature Cards --------\n.sm--features__feature-card{\n  margin-top: 1rem;\n  border: none;\n  transition: $transition-smooth-fast;\n\n  // .card-title{\n  //   height:36px;\n  //   margin-bottom: 1.2rem;\n  // }\n\n  .sm--features__feature-card-hover-indicator{\n    height: 8px;\n    width: 100%;\n    background: none;\n    transition: $transition-smooth-normal;\n    border-top-left-radius: 0;\n    border-top-right-radius: 0;\n    border-bottom-right-radius: 0.25rem;\n    border-bottom-left-radius: 0.25rem;\n  }\n\n\n  &:hover{\n    box-shadow: $shadow;\n    transform: $transform-scale;\n\n    .sm--features__feature-card-hover-indicator{\n      background: $primary;\n    }\n  }\n}","// ======================\n// Breakpoints\n// ======================\n\n// Name of the next breakpoint, or null for the last breakpoint.\n//\n//    >> breakpoint-next(sm)\n//    md\n//    >> breakpoint-next(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    md\n//    >> breakpoint-next(sm, $breakpoint-names: (xs sm md lg xl))\n//    md\n@function breakpoint-next($name, $breakpoints: $grid-breakpoints, $breakpoint-names: map-keys($breakpoints)) {\n  $n: index($breakpoint-names, $name);\n  @return if($n != null and $n < length($breakpoint-names), nth($breakpoint-names, $n + 1), null);\n}\n\n// Minimum breakpoint width. Null for the smallest (first) breakpoint.\n//\n//    >> breakpoint-min(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    576px\n@function breakpoint-min($name, $breakpoints: $grid-breakpoints) {\n  $min: map-get($breakpoints, $name);\n  @return if($min != 0, $min, null);\n}\n\n// Maximum breakpoint width. Null for the largest (last) breakpoint.\n// The maximum value is calculated as the minimum of the next one less 0.02px\n// to work around the limitations of `min-` and `max-` prefixes and viewports with fractional widths.\n//\n//    >> breakpoint-max(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    767.98px\n@function breakpoint-max($name, $breakpoints: $grid-breakpoints) {\n  $next: breakpoint-next($name, $breakpoints);\n  @return if($next, breakpoint-min($next, $breakpoints) - 0.02, null);\n}\n\n// Returns a blank string if smallest breakpoint, otherwise returns the name with a dash in front.\n// Useful for making responsive utilities.\n//\n//    >> breakpoint-infix(xs, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    \"\"  (Returns a blank string)\n//    >> breakpoint-infix(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    \"-sm\"\n@function breakpoint-infix($name, $breakpoints: $grid-breakpoints) {\n  @return if(breakpoint-min($name, $breakpoints) == null, \"\", \"-#{$name}\");\n}\n\n// Media of at least the minimum breakpoint width. No query for the smallest breakpoint.\n// Makes the @content apply to the given breakpoint and wider.\n@mixin media-breakpoint-up($name, $breakpoints: $grid-breakpoints) {\n  $min: breakpoint-min($name, $breakpoints);\n  @if $min {\n    @media (min-width: $min) {\n      @content;\n    }\n  } @else {\n    @content;\n  }\n}\n\n// Media of at most the maximum breakpoint width. No query for the largest breakpoint.\n// Makes the @content apply to the given breakpoint and narrower.\n@mixin media-breakpoint-down($name, $breakpoints: $grid-breakpoints) {\n  $max: breakpoint-max($name, $breakpoints);\n  @if $max {\n    @media (max-width: $max) {\n      @content;\n    }\n  } @else {\n    @content;\n  }\n}\n\n// Media that spans multiple breakpoint widths.\n// Makes the @content apply between the min and max breakpoints\n@mixin media-breakpoint-between($lower, $upper, $breakpoints: $grid-breakpoints) {\n  $min: breakpoint-min($lower, $breakpoints);\n  $max: breakpoint-max($upper, $breakpoints);\n\n  @if $min != null and $max != null {\n    @media (min-width: $min) and (max-width: $max) {\n      @content;\n    }\n  } @else if $max == null {\n    @include media-breakpoint-up($lower, $breakpoints) {\n      @content;\n    }\n  } @else if $min == null {\n    @include media-breakpoint-down($upper, $breakpoints) {\n      @content;\n    }\n  }\n}\n\n// Media between the breakpoint's minimum and maximum widths.\n// No minimum for the smallest breakpoint, and no maximum for the largest one.\n// Makes the @content apply only to the given breakpoint, not viewports any wider or narrower.\n@mixin media-breakpoint-only($name, $breakpoints: $grid-breakpoints) {\n  $min: breakpoint-min($name, $breakpoints);\n  $max: breakpoint-max($name, $breakpoints);\n\n  @if $min != null and $max != null {\n    @media (min-width: $min) and (max-width: $max) {\n      @content;\n    }\n  } @else if $max == null {\n    @include media-breakpoint-up($name, $breakpoints) {\n      @content;\n    }\n  } @else if $min == null {\n    @include media-breakpoint-down($name, $breakpoints) {\n      @content;\n    }\n  }\n}\n\n// ======================\n// Typography\n// ======================\n\n// TODO: Fluid Size Calculation\n"]}